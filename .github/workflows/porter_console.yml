"on":
  push:
    branches:
    - master
name: Deploy to Porter
jobs:
  porter-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2.3.4
    - name: Download Porter
      id: download_porter
      run: |2

        name=$(curl -s https://api.github.com/repos/porter-dev/porter/releases/latest | grep "browser_download_url.*/porter_.*_Linux_x86_64\.zip" | cut -d ":" -f 2,3 | tr -d \")
        name=$(basename $name)
        curl -L https://github.com/porter-dev/porter/releases/latest/download/$name --output $name
        unzip -a $name
        rm $name
        chmod +x ./porter
        sudo mv ./porter /usr/local/bin/porter
    - name: Configure Porter
      id: configure_porter
      run: |2

        sudo porter config set-host https://dashboard.getporter.dev
        sudo porter auth login --token ${{secrets.PORTER_TOKEN_201}}
        sudo porter docker configure
    - name: Docker build, push
      id: docker_build_push
      run: |2

        export $(echo "${{secrets.ENV_CONSOLE}}" | xargs)
        echo "${{secrets.ENV_CONSOLE}}" > ./env_porter
        sudo docker build . $(cat ./env_porter | awk 'NF' | sed 's@^@--build-arg @g' | paste -s -d " " -) --file console.Dockerfile -t 975032674314.dkr.ecr.us-east-1.amazonaws.com/console-default:$(git rev-parse --short HEAD)
        sudo docker push 975032674314.dkr.ecr.us-east-1.amazonaws.com/console-default:$(git rev-parse --short HEAD)
    - name: Deploy on Porter
      id: deploy_porter
      run: |2

        curl -X POST "https://dashboard.getporter.dev/api/webhooks/deploy/${{secrets.WEBHOOK_CONSOLE}}?commit=$(git rev-parse --short HEAD)"
